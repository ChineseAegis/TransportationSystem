///*
// * 2tests_TrafficAdvisory_YoursJob.cpp
// * 你实现交通咨询任务类TrafficAdvisory五个函数的七个测试用例
// */
//
//#include <iostream>
//#include <string>
//#include "catch.hpp"  //测试工具
//#include "TrafficAdvisory.h" //TrafficAdvisory类
//using std::cout;
//using std::endl;
//using std::string;
//
//TEST_CASE("TrafficAdvisory::numVertices_from::yours Test 1", "[part = 1][weight = 2]") {
//	//你的测试任务：编写针对TrafficAdvisory::numVertices_from()的测试用例，并测试它与其它功能的组合，替换掉下面的断言。
//	REQUIRE("我没有完成TrafficAdvisory::numVertices_from()函数的测试用例，以及与其他功能的组合测试。" == "我已经实现了TrafficAdvisory::numVertices_from()函数，并编写了对其的测试用例，以及与其他功能的组合测试！");
//}
//
//TEST_CASE("TrafficAdvisory::Dijkstra::yours  Test 2", "[part = 1][weight = 1]") {
//	//你的测试任务：编写针对TrafficAdvisory::Dijkstra()的测试用例，并测试它与其它功能的组合，替换掉下面的断言。
//	REQUIRE("我没有完成TrafficAdvisory::Dijkstra()函数的测试用例，以及与其他功能的组合测试。" == "我已经实现了TrafficAdvisory::Dijkstra()函数，并编写了对其的测试用例，以及与其他功能的组合测试！");
//
//}
//
//TEST_CASE("TrafficAdvisory::All_nonrepetition_paths::yours Test 3", "[part = 1][weight = 2]") {
//	//你的测试任务：编写针对TrafficAdvisory::All_nonrepetition_paths()的测试用例，并测试它与其它功能的组合，替换掉下面的断言。
//	REQUIRE("我没有完成TrafficAdvisory::All_nonrepetition_paths()函数的测试用例，以及与其他功能的组合测试。" == "我已经实现了TrafficAdvisory::All_nonrepetition_paths()函数，并编写了对其的测试用例，以及与其他功能的组合测试！");
//
//}
//
//TEST_CASE("TrafficAdvisory::Kth_ShortestPath::yours Test 4", "[part = 1][weight = 2]") {
//	//你的测试任务：编写针对TrafficAdvisory::Kth_ShortestPath()的测试用例，并测试它与其它功能的组合，替换掉下面的断言。
//	REQUIRE("我没有完成TrafficAdvisory::Kth_ShortestPath()函数的测试用例，以及与其他功能的组合测试。" == "我已经实现了TrafficAdvisory::Kth_ShortestPath()函数，并编写了对其的测试用例，以及与其他功能的组合测试！");
//
//}
//
//TEST_CASE("TrafficAdvisory::Floyd::yours Test  5", "[part = 1][weight = 1]") {
//	//你的测试任务：编写针对TrafficAdvisory::Floyd()的测试用例，并测试它与其它功能的组合，替换掉下面的断言。
//	REQUIRE("我没有完成TrafficAdvisory::Floyd()函数的测试用例，以及与其他功能的组合测试。" == "我已经实现了TrafficAdvisory::Floyd()函数，并编写了对其的测试用例，以及与其他功能的组合测试！");
//
//}
//
//TEST_CASE("TrafficAdvisory::Dijkstra::yours  Test 6", "[part = 1][weight = 1]") {
//	//你的测试任务：编写针对TrafficAdvisory::Dijkstra()的绕过某个城市功能的测试用例，并测试它与其它功能的组合，替换掉下面的断言。
//	//绕过某个城市
//	REQUIRE("我没有完成TrafficAdvisory::Dijkstra()函数的绕过某个城市功能的测试用例，以及与其他功能的组合测试。" == "我已经实现了TrafficAdvisory::Dijkstra()函数的绕过某个城市功能，并编写了对其的测试用例，以及与其他功能的组合测试！");
//
//}
//
//TEST_CASE("TrafficAdvisory::Floyd::yours Test  7", "[part = 1][weight = 1]") {
//	//你的测试任务：编写针对TrafficAdvisory::Floyd()的绕过某个城市功能的测试用例，并测试它与其它功能的组合，替换掉下面的断言。
//	//绕过某个城市
//	REQUIRE("我没有完成TrafficAdvisory::Floyd()函数的绕过某个城市功能的测试用例，以及与其他功能的组合测试。" == "我已经实现了TrafficAdvisory::Floyd()函数的绕过某个城市的功能，并编写了对其的测试用例，以及与其他功能的组合测试！");
//
//}